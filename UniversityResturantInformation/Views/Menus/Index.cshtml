@using System.Security.Claims;
@model IEnumerable<UniversityResturantInformation.Models.Menu>

@{
    ViewData["Title"] = "Index";
    if (User.FindFirst(ClaimTypes.Role).Value == "DataEntry")
    {
        Layout = "DataEntryLayout";
    }
    else if (User.FindFirst(ClaimTypes.Role).Value == "Admin")
    {
        Layout = "AdminLayout";
    }
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<div class="table-responsive">
    <table id="myTable" class="table table-striped table-sm border">
        <thead>
            <tr>

                <th>
                    @Html.DisplayNameFor(model => model.Id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Meal)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IsActive)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IsVoteable)
                </th>
                
                <th>Settings</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Meal)
                    </td>
                    <td>
                        @*@Html.DisplayFor(modelItem => item.IsActive) *@

                        <div class="form-check form-switch">
                            @Html.CheckBoxFor(modelItem => item.IsActive, new { @class = "form-check-input", id = "flexSwitchCheck" + (item.IsActive ? "Checked" : "Unchecked"), @checked = item.IsActive, @disabled = "disabled" })
                            <label class="form-check-label" for="flexSwitchCheck@(item.IsActive ? "Checked" : "Unchecked")">
                                @if (item.IsActive)
                                {
                                }
                                else
                                {
                                }
                            </label>
                        </div>
                    </td>
                    <td>
                        @* @Html.DisplayFor(modelItem => item.IsVoteable) *@

                        <div class="form-check form-switch">
                            @Html.CheckBoxFor(modelItem => item.IsVoteable, new { @class = "form-check-input", id = "flexSwitchCheck" + (item.IsVoteable ? "Checked" : "Unchecked"), @checked = item.IsVoteable, @disabled = "disabled" })
                            <label class="form-check-label" for="flexSwitchCheck@(item.IsVoteable ? "Checked" : "Unchecked")"> </label>
                        </div>
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary">
                            <i class="bi bi-pencil"></i>
                        </a> |
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info">
                            <i class="bi bi-info-circle"></i>
                        </a>  |
                        <a asp-action="Delete" asp-route-id="@item.Id"
                            class="btn btn-danger">
                            <i class="bi bi-trash"></i>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@* 

 table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsActive)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Meal)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsActive)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Meal)
                    
    </tbody>
</table> 
  *@