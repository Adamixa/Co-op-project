@using System.Security.Claims;
@model UniversityResturantInformation.Models.Menu

@{
    ViewData["Title"] = "Delete";
    if (User.FindFirst(ClaimTypes.Role).Value == "DataEntry")
    {
        Layout = "DataEntryLayout";
    }
    else if (User.FindFirst(ClaimTypes.Role).Value == "Admin")
    {
        Layout = "AdminLayout";
    }
}
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    @if (ViewData["Delete"] != null)
    {
        <text>
            Swal.fire({
                title: 'Are you sure?',
                text: 'You will delete this item',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire({
                        title: 'Deleted!',
                        text: 'Your item has been deleted.',
                        icon: 'success',
                    }).then(function () {
                        window.location.href = '@Url.Action("Index", "Menus")';
                    });
                }
            });
        </text>
    }
            // else if (ViewData["Failed"] != null)
            // {
            //     <text>
            //         Swal.fire({
            //             icon: 'error',
            //             title: 'Oops...',
            //             text: 'Something went wrong, Try Later!'
            //         });
            //     </text>
            // }
</script>


<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Menu</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            Menu Number
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.IsActive)
        </dt>
        <dd class="col-sm-10">

            @*@Html.DisplayFor(modelItem => item.IsActive) *@

            <div class="form-check form-switch">
                @Html.CheckBoxFor(modelItem => Model.IsActive, new { @class = "form-check-input", id = "flexSwitchCheck" + (Model.IsActive ? "Checked" : "Unchecked"), @checked = Model.IsActive, @disabled = "disabled" })
                <label class="form-check-label" for="flexSwitchCheck@(Model.IsActive ? "Checked" : "Unchecked")"> </label>
            </div>

        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.IsVoteable)
        </dt>
        <dd class="col-sm-10">

            @*@Html.DisplayFor(modelItem => item.IsActive) *@

            <div class="form-check form-switch">
                @Html.CheckBoxFor(modelItem => Model.IsVoteable, new { @class = "form-check-input", id = "flexSwitchCheck" + (Model.IsVoteable ? "Checked" : "Unchecked"), @checked = Model.IsVoteable, @disabled = "disabled" })
                <label class="form-check-label" for="flexSwitchCheck@(Model.IsVoteable ? "Checked" : "Unchecked")"> </label>
            </div>

        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Meal)
        </dt>

        @if (Model.Meal == 1)
        {
            <dd class="col-sm-10">BreakFast</dd>
        }
        else if (Model.Meal == 2)
        {
            <dd class="col-sm-10">Lunch</dd>
        }
        else
        {
            <dd class="col-sm-10">Dinner</dd>
        }

        <dt class=" = col-sm-2">
            Menu Items:
        </dt>
        <dd class="col-sm-10">
            @foreach (Menu_Item item in ViewBag.items)
            {


                <p class="text-dark mt-3 mb-3 fs-8">@item.Item.ItemName</p>

            }
        </dd>
    </dl>
</div>
    <form asp-action="Delete">
        <input type="hidden" asp-for="Id" />
        <input type="submit" value="Delete" class="btn btn-danger" /> |
        <a asp-action="Index">Back to List</a>
    </form>
</div>
